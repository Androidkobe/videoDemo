package com.example.videoplayer.alphavideoimport android.os.Bundleimport android.os.Environmentimport android.util.Logimport android.view.WindowManagerimport androidx.appcompat.app.AppCompatActivityimport com.example.SDPathUtilimport com.example.videoplayer.databinding.ActivityAlphaBindingimport com.google.android.exoplayer2.ExoPlayerimport com.google.android.exoplayer2.MediaItemimport com.google.android.exoplayer2.analytics.AnalyticsListenerimport com.google.android.exoplayer2.extractor.flv.FlvExtractorimport com.google.android.exoplayer2.source.MediaSourceimport com.google.android.exoplayer2.util.MimeTypesimport com.google.android.exoplayer2.video.VideoSizeimport com.google.common.net.MediaTypeimport java.io.Fileclass ExoplayActivity :AppCompatActivity() {    val url1 = "http://n1cdn.miaopai.com/stream/oxX3t3Vm5XPHKUeTS-zbXA__.mp4?ssig=2780b01d36e187235c99ce38e21889d2&time_stamp=1648295405673"    val url2 = "http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4"    val url3 = SDPathUtil.storeDirPath+ File.separator+"a.flv"    val url4 = SDPathUtil.storeDirPath+ File.separator+"b.flv"    val bindView by lazy {        ActivityAlphaBinding.inflate(layoutInflater)    }    val exoPlayer by lazy {         ExoPlayer.Builder(this).build()    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        window.addFlags(WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED)        setContentView(bindView.root)        exoPlayer.setMediaItem(getMediaItem())        bindView.videoSurface.getSurface { surface ->            exoPlayer.setVideoSurface(surface)        }        exoPlayer.addAnalyticsListener(analyticsListener)        exoPlayer.prepare()        exoPlayer.play()    }    private fun getMediaItem():MediaItem{        Log.e("sundu","file = "+File(url4).exists())       return MediaItem.Builder()           .setUri(url4)           .setMimeType(MimeTypes.VIDEO_FLV)           .build()    }    private fun getMediaSource(){        var mediaSource = FlvExtractor()    }    var analyticsListener = object : AnalyticsListener{        override fun onVideoSizeChanged(            eventTime: AnalyticsListener.EventTime,            videoSize: VideoSize        ) {            super.onVideoSizeChanged(eventTime, videoSize)            bindView.videoSurface.layoutParams.height = (bindView.videoSurface.width                    / (videoSize.width*1f/videoSize.height*1f)).toInt()            bindView.videoSurface.requestLayout()        }    }    override fun onDestroy() {        super.onDestroy()        exoPlayer.stop()        exoPlayer.release()    }}